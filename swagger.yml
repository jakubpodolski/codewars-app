    # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md
swagger: '2.0'

info:
  title: Codewars API
  version: '1'
  # TODO: Remove 'Authentication' since none of the currently documented endpoints requires it.
  description: |-
    The [Codewars](https://www.codewars.com) API is organized around REST.
    Our API is designed to have predictable, resource-oriented URLs and to use HTTP response codes to indicate API errors.
    We use built-in HTTP features, like HTTP authentication and HTTP verbs.
    JSON will be returned in all responses from the API, including errors.

    # Authentication
    Codewars uses API access keys to allow access to restricted endpoints.
    Access keys are specific to a user account and can be found by navigating to your [Account Settings](https://www.codewars.com/users/edit).
    It can be included either via a header:

    `Authorization: {API ACCESS TOKEN}`

    or by passing it as a parameter:

    `?access_key={API ACCESS TOKEN}`

    # Errors

    Conventional HTTP response codes are used to indicate the status of an API request.

  x-logo: # TODO: update this URL after migrating
    url: https://kazk.github.io/docs.codewars.com/assets/img/logo.png

host: www.codewars.com
basePath: /api/v1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

tags:
  - name: users
    description: Operations about user
  - name: code-challenges
    x-displayName: Code Challenges
    description: Code Challenges

definitions:
  User:
    type: object
    properties:
      username:
        description: Username
        type: string
      url:
        description: Profile URL
        type: string

  UserInfo:
    type: object
    properties:
      username:
        description: Username
        type: string
      name:
        description: Name
        type: string
      honor:
        description: Earned honor points
        type: integer
        format: int32
      clan:
        description: Clan (company, school or organization)
        type: string
      leaderboardPosition:
        description: Position on the overall leaderboard
        type: integer
        format: int32
      skills:
        description: Skills
        type: array
        items:
          type: string
      ranks:
        description: Ranks
        type: object
        properties:
          overall:
            $ref: '#/definitions/RankProgress'
          languages:
            description: Map of language name as a key and Progress as a value.
            type: object
            additionalProperties:
              $ref: '#/definitions/RankProgress'
      codeChallenges:
        type: object
        properties:
          totalAuthored:
            description: Number of authored code challenges
            type: integer
            format: int32
          totalCompleted:
            description: Number of completed code challenges
            type: integer
            format: int32
    example:
      username: jhoffner
      name: Jake Hoffner
      honor: 25130
      clan: Codewars
      leaderboardPosition: 9
      skills: [ruby, javascript]
      ranks:
        overall:
          rank: -3
          name: "3 kyu"
          color: "blue"
          score: 2889
        languages:
          javascript:
            rank: -3
            name: "3 kyu"
            color: "blue"
            score: 1936
          ruby:
            rank: -4
            name: "4 kyu"
            color: "blue"
            score: 1572
      codeChallenges:
        totalAuthored: 82
        totalCompleted: 388

  RankProgress:
    type: object
    properties:
      rank:
        description: Rank
        type: integer
        format: int32
      name:
        description: Rank name
        type: string
        # enum: [2 dan, 1 dan, 1 kyu, 2 kyu, 3 kyu, 4 kyu, 5 kyu, 6 kyu, 7 kyu, 8 kyu]
      color:
        description: Rank color
        type: string
        # enum: [black, purple, blue, yellow, white]
      score:
        description: Score
        type: integer
        format: int32

  # users/{user}/code-challenges/authored
  AuthoredCodeChallenge:
    type: object
    properties:
      id:
        description: ID
        type: string
      name:
        description: Name
        type: string
      description:
        description: Description
        type: string
      rank:
        $ref: '#/definitions/CodeChallengeRankID'
      rankName:
        $ref: '#/definitions/CodeChallengeRankName'
      tags:
        type: array
        items:
          type: string
      languages:
        type: array
        items:
          type: string
    example:
      id: '5571d9fc11526780a000011a'
      name: 'The builder of things'
      description: |-
        For this kata you will be using some meta-programming magic to create a new `Thing` object.
        This object will allow you to define things in a descriptive **sentence like format**.
      rank: -2
      rankName: '2 kyu'
      tags: [Algorithms, Metaprogramming]
      languages: [ruby, javascript, python]

  CompletedCodeChallenge:
    type: object
    properties:
      id:
        description: ID
        type: string
      name:
        description: Name
        type: string
      slug:
        description: Slug
        type: string
      completedLanguages:
        description: Languages used to complete the challenge
        type: array
        items:
          type: string
      completedAt:
        description: Completed at
        type: string
        format: date-time
    example:
      id: '50654ddff44f800200000004'
      name: Multiply
      slug: multiply
      completedLanguages: [javascript, java, python]
      completedAt: '2013-06-01T17:58:27Z'

  # code-challenges/{name}
  CodeChallengeInfo:
    type: object
    properties:
      id:
        description: ID
        type: string
      name:
        description: Name
        type: string
      slug:
        description: Slug
        type: string
      url:
        description: URL
        type: string
      description:
        description: Code challenge description
        type: string
      category:
        description: Category
        type: string
      publishedAt:
        description: Published At
        type: string
        format: date-time
      createdAt:
        description: Created At
        type: string
        format: date-time
      createdBy:
        $ref: '#/definitions/User'
      approvedAt:
        description: Approved At
        type: string
        format: date-time
      approvedBy:
        $ref: '#/definitions/User'
      totalAttempts:
        description: Submission count
        type: integer
        format: int32
      totalCompleted:
        description: Completion count
        type: integer
        format: int32
      totalStars:
        description: Starred count
        type: integer
        format: int32
      voteScore:
        description: Vote score
        type: integer
        format: int32
      contributorsWanted:
        type: boolean
      rank:
        $ref: '#/definitions/CodeChallengeRank'
      tags:
        description: Tags
        type: array
        items:
          type: string
      languages:
        description: Languages
        type: array
        items:
          type: string
      unresolved:
        type: object
        properties:
          issues:
            description: Number of unresolved issues
            type: integer
            format: int32
          suggestions:
            description: Number of unresolved suggestions
            type: integer
            format: int32
    example:
      id: '5571d9fc11526780a000011a'
      name: 'The builder of things'
      slug: 'the-builder-of-things'
      category: 'algorithms'
      publishedAt: '2015-06-05T17:47:05Z'
      approvedAt: '2017-03-14T22:19:53Z'
      languages: [ruby, javascript, python]
      url: 'https://www.codewars.com/kata/the-builder-of-things'
      rank:
        id: -2
        name: '2 kyu'
        color: purple
      createdAt: '2015-06-05T17:18:52Z'
      createdBy:
        username: jhoffner
        url: 'https://www.codewars.com/users/jhoffner'
      approvedBy:
        username: jhoffner
        url: 'https://www.codewars.com/users/jhoffner'
      description: |-
        For this kata you will be using some meta-programming magic to create a new `Thing` object.
        This object will allow you to define things in a descriptive **sentence like format**.
      totalAttempts: 1034
      totalCompleted: 74
      totalStars: 53
      voteScore: 40
      tags: [Algorithms, Metaprogramming]
      contributorsWanted: true
      unresolved:
        issues: 0
        suggestions: 0

  CodeChallengeRank:
    description: Code challenge rank
    type: object
    properties:
      id:
        $ref: '#/definitions/CodeChallengeRankID'
      name:
        $ref: '#/definitions/CodeChallengeRankName'
      color:
        $ref: '#/definitions/CodeChallengeRankColor'

  CodeChallengeRankID:
    description: Code challenge rank ID
    type: integer
    format: int32
    x-nullable: true

  CodeChallengeRankName:
    description: Code challenge rank name
    type: string
    # enum: [1 kyu, 2 kyu, 3 kyu, 4 kyu, 5 kyu, 6 kyu, 7 kyu, 8 kyu]
    x-nullable: true

  CodeChallengeRankColor:
    description: Code challenge rank color
    type: string
    # enum: [purple, blue, yellow, white]
    x-nullable: true

  Error:
    type: object
    properties:
      success:
        type: boolean
      reason:
        type: string
    example:
      success: false
      reason: "not found"

  AuthoredCodeChallenges:
    type: object
    properties:
      data:
        description: Array of authored code challenges 
        type: array
        items:
          $ref: '#/definitions/AuthoredCodeChallenge'

  CompletedCodeChallenges:
    type: object
    properties:
      totalPages:
        description: Number of pages
        type: integer
        format: int32
        example: 1
      totalItems:
        description: Number of completed challenges
        type: integer
        format: int32
        example: 1
      data:
        description: Array of completed challenges
        type: array
        items:
          $ref: '#/definitions/CompletedCodeChallenge'


parameters:
  userParam:
    in: path
    name: user
    description: ID or username
    type: string
    required: true
  challengeParam:
    in: path
    name: challenge
    description: ID or slug
    type: string
    required: true
  pageParam:
    in: query
    name: page
    description: Pagination offset (zero-based)
    type: integer
    required: false
    default: 0

# none of the documented endpoints require `access_key`
#securityDefinitions:
#  AuthorizationHeader:
#    type: apiKey
#    name: Authorization
#    in: header
#  AccessKeyQuery:
#    type: apiKey
#    name: access_key
#    in: query

responses:
  UserInfoResponse:
    description: Success
    schema:
      $ref: '#/definitions/UserInfo'

  AuthoredCodeChallengesResponse:
    description: Success
    schema:
      $ref: '#/definitions/AuthoredCodeChallenges'

  CompletedCodeChallengesResponse:
    description: Success
    schema:
      $ref: '#/definitions/CompletedCodeChallenges'

  CodeChallengeInfoResponse:
    description: Success
    schema:
      $ref: '#/definitions/CodeChallengeInfo'

  NotFound:
    description: Not Found
    schema:
      $ref: '#/definitions/Error'

paths:
  /users/{user}:
    get:
      summary: Get user information
      description: Returns information about `user`.
      operationId: getUser
      tags:
        - users
      parameters:
        - $ref: '#/parameters/userParam'
      responses:
        200:
          $ref: '#/responses/UserInfoResponse'
        404:
          $ref: '#/responses/NotFound'
      x-code-samples:
        - lang: curl
          source: curl "https://www.codewars.com/api/v1/users/jhoffner"

  /users/{user}/code-challenges/authored:
    get:
      summary: Get code challenges authored by `user`
      description: Returns a list of all code challenges authored by `user`.
      operationId: getAuthoredCodeChallenges
      tags:
        - users
      parameters:
        - $ref: '#/parameters/userParam'
      responses:
        200:
          $ref: '#/responses/AuthoredCodeChallengesResponse'
        404:
          $ref: '#/responses/NotFound'
      x-code-samples:
        - lang: curl
          source: curl "https://www.codewars.com/api/v1/users/jhoffner/code-challenges/authored"

  /users/{user}/code-challenges/completed:
    get:
      summary: Get code challenges completed by `user`
      description: |-
        Returns a list of code challenges completed by `user`.
        By default only the first 200 code challenges will be returned.
        You can page the results using the `page` parameter.
      operationId: getCompletedCodeChallenges
      produces:
        - application/json
      tags:
        - users
      parameters:
        - $ref: '#/parameters/userParam'
        - $ref: '#/parameters/pageParam'
      responses:
        200:
          $ref: '#/responses/CompletedCodeChallengesResponse'
        404:
          $ref: '#/responses/NotFound'
      x-code-samples:
        - lang: curl
          source: curl "https://www.codewars.com/api/v1/users/jhoffner/code-challenges/completed"

  /code-challenges/{challenge}:
    get:
      summary: Get code challenge information
      description: Returns information about `challenge`.
      operationId: getCodeChallenge
      tags:
        - code-challenges
      parameters:
        - $ref: '#/parameters/challengeParam'
      responses:
        200:
          $ref: '#/responses/CodeChallengeInfoResponse'
        404:
          $ref: '#/responses/NotFound'
      x-code-samples:
        - lang: curl
          source: curl "https://www.codewars.com/api/v1/code-challenges/the-builder-of-things"

